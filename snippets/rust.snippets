snippet lv 'log a variable'
        println!("***** ${1:var1}: {:?}", ${1:var1});

snippet lv2 'log 2 variables'
        println!("***** ${1:var1}: {:?} ${2:var2}: {:?}", ${1:var1}, ${2:var2});

snippet lv3 'log 3 variables'
        println!("***** ${1:var1}: {:?} ${2:var2}: {:?} ${3:var3}: {:?}", ${1:var1}, ${2:var2}, ${3:var3});

snippet lv4 'log 4 variables'
        println!("***** ${1:var1}: {:?} ${2:var2}: {:?} ${3:var3}: {:?} ${4:var4}: {:?}", ${1:var1}, ${2:var2}, ${3:var3}, ${4:var4});

snippet log 'log a message'
        println!("***** ${1}");

snippet logsep 'log separator'
        println!("=======================");

snippet test 'stub unit test'
				#[test],
				fn ${1:test}() {,
				    ${0},
				}

snippet leet 'leetcode stub'
				pub struct Solution;,
				,
				impl Solution {,
				,
				},
				,
				#[cfg(test)],
				mod tests {,
				    use super::*;,
				,
				    #[test],
				    fn test1() {,
				,
				    },
				},
